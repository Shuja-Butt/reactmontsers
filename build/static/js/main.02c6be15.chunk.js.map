{"version":3,"sources":["components/card.component/card.jsx","components/cardlist.component/cardlist.jsx","components/searchbox.component/searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","class","src","monster","id","alt","name","email","CardList","className","monsters","map","key","SearchBox","type","onChange","filter","placeholder","App","state","searchBox","onSearchCahnge","bind","a","console","log","fetch","req","json","data","setState","callAPi","e","this","target","value","filterMonsters","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAEaA,EAAM,SAACC,GAAD,OAGnB,sBAAKC,MAAM,OAAX,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAG,UAAKL,EAAMG,QAAQG,QAClG,6BAAKN,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCNPC,G,MAAY,SAACR,GAAD,OAEzB,qBAAKS,UAAU,sBAAf,SAEKT,EAAMU,SAASC,KAAI,SAAAR,GAEjB,OAAQ,cAAC,EAAD,CAAyBA,QAASA,GAAtBA,EAAQS,YCNpBC,G,MAAU,SAACb,GAAD,OAEzB,8BAEA,uBAAOc,KAAK,SAASC,SAAUf,EAAMgB,OAASC,YAAY,wBCyF3CC,G,wDArFb,aAAc,IAAD,8BACX,gBACIC,MAAM,CACTT,SAAS,GACTU,UAAU,IAGZ,EAAKC,eAAe,EAAKA,eAAeC,KAApB,gBAPR,E,qDAUb,WAAoB,IAAD,QAWL,uCAAE,8BAAAC,EAAA,6DACZC,QAAQC,IAAI,GACZD,QAAQC,IAAI,EAAK,0BAFL,SAGMC,MAAM,8CAHZ,cAGRC,EAHQ,gBAIKA,EAAIC,OAJT,OAIRC,EAJQ,OAKZ,EAAKC,SAAS,CAACpB,SAASmB,IACxBL,QAAQC,IAAI,GANA,4CAAF,qDASZM,K,4BAKD,SAAeC,GACbC,KAAKH,SAAS,CAACV,UAAUY,EAAEE,OAAOC,U,oBAKrC,WAAS,IAAD,OAMJC,EAAiBH,KAAKd,MAAMT,SAASM,QAAO,SAAAb,GAAO,OAAGA,EAAQG,KAAK+B,cAAcC,SAAS,EAAKnB,MAAMC,UAAUiB,kBAEjH,OACC,sBAAM5B,UAAU,MAAhB,UACA,oBAAIL,GAAG,UAAP,8BACA,cAAC,EAAD,CAAWY,OAAQiB,KAAKZ,iBAExB,cAAC,EAAD,CAAUX,SAAU0B,W,GAxDPG,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.02c6be15.chunk.js","sourcesContent":["\r\nimport './card.css'\r\nexport const Card =(props)=>(\r\n\r\n\r\n<div class=\"card\" >\r\n  <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={`${props.monster.name}`}/>\r\n  <h2>{props.monster.name}</h2>\r\n  <p>{props.monster.email}</p>\r\n</div>\r\n\r\n\r\n)\r\n\r\n","import {Card} from '../card.component/card'\r\nimport './cardlist.css'\r\nexport const CardList =  (props) => (\r\n\r\n<div className=\"card-list-container\">\r\n \r\n    {props.monsters.map(monster=>{\r\n\r\n       return  <Card  key={monster.key} monster={monster}/>\r\n\r\n    })}\r\n\r\n\r\n</div>\r\n\r\n\r\n)\r\n \r\n\r\n","import './searchbox.css'\r\n\r\nexport const   SearchBox=(props)=>(\r\n\r\n<div>\r\n\r\n<input type=\"search\" onChange={props.filter}  placeholder=\"search monsters\"/>\r\n\r\n</div>\r\n\r\n)","import {Component} from 'react';\nimport {CardList} from './components/cardlist.component/cardlist'\nimport { SearchBox } from './components/searchbox.component/searchbox';\nimport './App.css';\n\n\n\n\nclass App extends Component {\n\n  constructor(){//run first before any method\n    super();\n   this.state={\n     monsters:[],\n     searchBox:''\n   }\n\n   this.onSearchCahnge=this.onSearchCahnge.bind(this)\n  }\n\n  componentDidMount(){//runs before render\n   \n  //  fetch('https://jsonplaceholder.typicode.com/todos/1')\n  //  .then(res=>res.json())\n  //  .then(data=>this.setState({monsters:data}),()=>console.log(this.state))\n\n  // with async await\n  //  let context= this;\n  //  (async function(){\n\n  \n     let callAPi= async ()=>{\n      console.log(1)\n      console.log(this,\"in component did mount\")\n      let req = await   fetch('https://jsonplaceholder.typicode.com/users')\n      let data = await req.json()\n      this.setState({monsters:data})\n      console.log(3)\n\n    }\n    callAPi()\n\n  // })()\n  }\n\n   onSearchCahnge(e){\n     this.setState({searchBox:e.target.value})\n   }\n\n\n\n  render(){//returns when the state changes\n    \n  //  let filteredProducts=()={\n\n\n  //  }\n  let filterMonsters = this.state.monsters.filter(monster=> monster.name.toLowerCase().includes(this.state.searchBox.toLowerCase()))\n\n    return(\n     <div  className='App'>\n     <h1 id='heading'>Monsters Rorodex</h1>\n     <SearchBox filter={this.onSearchCahnge}/>\n\n     <CardList monsters={filterMonsters} />\n     </div>\n\n    )\n  }\n}\n\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}